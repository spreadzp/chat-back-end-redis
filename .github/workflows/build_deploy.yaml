name: Backend deploy

on:
  workflow_dispatch:
  push:
    branches: 
      - main
    paths-ignore:
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      name: ${GITHUB_REPOSITORY#*/}"-dev"
      key: "ssh_key"
      stamp: ${GITHUB_SHA} 
      host: ${{ vars.EC2_HOST }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
           
      - name: Build docker image
        run: |
          docker build . -t ${{ env.name }}:${{ env.stamp }}
          
      - name: Save docker image
        run: |
          docker save -o ${{ env.name }}.tar ${{ env.name }}:${{ env.stamp }}
      
      - name: Copy image to EC2
        run: |
          echo "${{ secrets.DEV_SSH_KEY }}" > ${key}
          sudo chmod 600 ${key}
          scp -i ${key} -o "StrictHostKeyChecking no" ${{ env.name }}.tar ${{ env.host }}:${{ env.name }}.tar
        
      - name: Start image
        run: |
          ssh -i ${key} -o "StrictHostKeyChecking no" ${{ vars.EC2_HOST }} ' \
          sudo docker load -i '${{ env.name }}'.tar && \
          sudo docker stop '${{ env.name }}' ; \
          sudo docker run -d --restart always -p '${{ vars.PORT }}':'${{ vars.PORT }}' \
          -e DB_URL='${{ vars.DB_URL }}' \
          -e REDIS_HOST='${{ vars.REDIS_HOST }}' \
          -e REDIS_PORT='${{ vars.REDIS_PORT }}' \
          -e REDIS_URL='${{ vars.REDIS_URL }}' \ 
          -e HOST='${{ vars.HOST }}' \
          -e PORT='${{ vars.PORT }}' \
          --network mynetwork \
          --name '${{ env.name }}'-new '${{ env.name }}':'${{ env.stamp }}' && \
          sudo docker rm '${{ env.name }}' && sudo docker rmi $(sudo docker images -q); \
          sudo docker rename '${{ env.name }}'-new '${{ env.name }}' && \
          rm '${{ env.name }}'.tar'
